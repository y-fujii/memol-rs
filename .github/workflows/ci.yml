on: [push]
jobs:
  x64_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - run: cargo test
      - run: cargo build --release
      - run: |
          cd target/release
          mv libmemol_vst.so memol_vst.so
          tar czf memol_x64_linux.tar.gz memol_cli memol_gui memol_vst.so
          gh release upload build_nightly memol_x64_linux.tar.gz --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  x64_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - run: cargo test
      - run: cargo build --release
      - run: |
          cd target/release
          mv libmemol_vst.dylib memol_vst.dylib
          7z a memol_x64_macos.zip memol_cli memol_gui memol_vst.dylib
          gh release upload build_nightly memol_x64_macos.zip --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  x64_windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          install: |
            mingw-w64-ucrt-x86_64-clang
            mingw-w64-ucrt-x86_64-rust
            mingw-w64-ucrt-x86_64-7zip
            mingw-w64-ucrt-x86_64-github-cli

      - run: CC=clang CXX=clang++ cargo test
      - run: CC=clang CXX=clang++ cargo build --release
      - run: |
          cd target/release
          7z a memol_x64_windows.zip memol_cli.exe memol_gui.exe memol_vst.dll
          gh release upload build_nightly memol_x64_windows.zip --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
